{"version":3,"sources":["Media/Logos/JPG/logo-the.jpg","Media/Logos/SVG/logo-the-light.svg","Media/Logos/PNG/LighterLogo.png","components/Pages/About/index.js","components/Pages/Article/index.js","components/Pages/Blogs/index.js","components/Pages/Contact/index.js","components/Pages/Donation/index.js","components/Pages/Home/index.js","components/Pages/SingleBlog/index.js","components/StructuralComponents/Container/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","About","className","Component","Article","strapi","Strapi","Blogs","props","state","posts","post","getEntries","this","setState","alert","map","key","id","to","title","dangerouslySetInnerHTML","__html","marked","content","substring","Contact","Donation","Home","HomeComp","useMediaQuery","maxWidth","SingleBlog","blog","test","authors","getBlog","then","response","json","data","fetch","match","params","Name","published","React","BlogMain","exact","path","component","NavBar","height","src","LightLogo","alt","MobileNavBar","SmallLogo","DropdownButton","Dropdown","Item","App","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.84b78810.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo-the.89800614.jpg\";","module.exports = __webpack_public_path__ + \"static/media/logo-the-light.23b7902d.svg\";","module.exports = __webpack_public_path__ + \"static/media/LighterLogo.a142baef.png\";","import React, { Component } from 'react'\n\nexport class About extends Component {\n    render() {\n        return (\n            <div>\n                \n                <h1 className=\"NavBarPadding\"> About Content</h1>\n                <p>Bacon ipsum dolor amet swine pig chicken, prosciutto jerky alcatra biltong t-bone corned beef tenderloin beef ribs flank jowl bresaola shoulder. Venison cow flank, chislic ribeye boudin pork pork chop chuck tenderloin doner buffalo bacon. Alcatra biltong ribeye, turducken leberkas andouille picanha doner kevin. Fatback jerky short ribs, ribeye sirloin bacon cow landjaeger swine. Tenderloin shankle t-bone, bacon pork belly kielbasa ribeye buffalo sausage bresaola. Tri-tip pork belly prosciutto chislic swine. Porchetta tail leberkas ham hock pork loin landjaeger. Salami ground round hamburger, swine turkey shankle landjaeger pig tenderloin. Ground round venison shankle chuck flank pork loin. Cow drumstick ham flank jerky bresaola shankle jowl swine brisket. Shoulder chicken landjaeger, leberkas corned beef salami bresaola turducken. Pork pancetta leberkas, tongue chicken t-bone shankle swine frankfurter meatball porchetta ground round bresaola chuck. Shank corned beef tail, prosciutto chicken venison beef ribs meatloaf cupim pancetta t-bone. Pancetta drumstick tenderloin pork loin jowl capicola sausage bacon beef ribs ground round leberkas jerky. Beef ribs shoulder swine bacon shank salami, brisket chuck tail drumstick hamburger. Porchetta tenderloin pig shoulder cow beef, chislic salami. Beef ribs fatback frankfurter, chuck sirloin ball tip ribeye porchetta t-bone pancetta.</p>\n                \n            </div>\n        )\n    }\n}\n\nexport default About\n","import React, { Component } from 'react'\nimport Strapi from \"strapi-sdk-javascript/build/main\";\n// import Article from '../Article'\n// import {useLocation} from 'react-router-dom';\n\n// let URL = useLocation();\n\n// const strapi = new Strapi(`http://localhost:1337/`);\n\n\nexport class Article extends Component {\n\n    // constructor(props) {\n    //     super(props);\n    //     this.state = {\n    //      post: []\n    //    }\n    //  }\n    \n    // async componentDidMount() {\n    //  try {\n    //    const post = await strapi.getEntries('blogs')\n    //    this.setState({ post });\n    //  } \n    //  catch(err) {\n    //   alert(err);\n    //  }\n    // }\n    \n    render() {\n      return (\n            <div>\n                <h1>Article Content</h1>\n            </div>\n        )\n    }\n}\n\nexport default Article\n","import React, { Component } from 'react';\nimport Strapi from \"strapi-sdk-javascript/build/main\";\nimport marked from 'marked';\nimport Article from '../Article';\n\nimport {BrowserRouter as Switch,Route ,  Link } from \"react-router-dom\";\n\n// import Articles from \"../containers/Articles\";\n// import Article from \"../Article\";\n// import Author from \"../containers/Author\";\n// import Authors from \"../containers/Authors\";\n\nconst strapi = new Strapi('http://localhost:1337');\n\n\nexport class Blogs extends Component {\n\n  // class func = ()=>{\n  //   let { path, url } = useRouteMatch();\n\n  // }\n\n  constructor(props) {\n    super(props);\n    this.state = {\n     posts: [],\n     post:'',\n   }\n }\n\nasync componentDidMount() {\n try {\n   const posts = await strapi.getEntries('blogs')\n   this.setState({ posts });\n } \n\n catch(err) {\n  alert(err);\n }\n}\n\n\n\nrender() {\n  // var preview='';\n  return (\n\n\n    <div>\n\n        <div className=\"blogBanner\">\n          <div className=\"blogcontainer\">         \n          <h1 className=\"Posts\">Posts</h1>\n          <div className=\"\">\n            \n          </div>\n          \n          <div className=\"blogs\">\n          {this.state.posts.map(post => (\n            \n            <Link key={post.id} to = {`/blogs/`+post.id}>\n            <div className=\"story\">\n\n    \n              \n\n              <div key={post.title} className=\"list\">\n\n                <div id=\"blogpage\" className=\"exampleStory\">\n                  {/* {url = `/blogs/`+post.id} */}\n                    {(post.title)} \n                </div>\n                <div className=\"contentPreview\" dangerouslySetInnerHTML={{ __html: marked(post.content).substring(0,100)+'...' }}></div>\n\n              </div >\n\n            </div>\n            </Link>\n          \n          \n          ))}\n          </div>\n        </div>\n        </div> \n    </div>\n  )\n }\n}\n\nexport default Blogs","import React, { Component } from 'react'\n\nexport class Contact extends Component {\n    render() {\n        return (\n            <div>\n                <h1>Contact Content</h1>\n            </div>\n        )\n    }\n}\n\nexport default Contact\n","import React, { Component } from 'react'\n\nexport class Donation extends Component {\n    render() {\n        return (\n            <div>\n                <h1>Donation Content</h1>\n            </div>\n        )\n    }\n}\n\nexport default Donation\n","import React, { Component, useState, useEffect, setErrors} from 'react'\nimport {Link} from \"react-router-dom\";\n// import NavBar from '../NavBar'\nimport BottomBanner from \"../../StructuralComponents/BottomBanner\";\nimport { useMediaQuery } from 'react-responsive';\n\n\n\n\nexport class Home extends Component { \n\n    render() {\n        return (\n            <div>\n                <HomeComp>\n                </HomeComp>\n            </div> \n        )\n    }\n    \n}\n\nconst Story = ()=>{\n    var [data,setStory] = useState();\n\n    async function fetchData() {\n\n        await fetch(\"http://localhost:1337/blogs/\")\n        .then(response => response.json())\n        .then(response => {\n            setStory(response);            \n        })\n\n        .catch(err => setErrors(err));\n    }\n    \n    useEffect(() => {\n        fetchData();\n        // console.log(fetchData());\n        return () => {\n            console.log('unmounting...') \n        }\n    },[]);\n\n    if (data ){\n        //Get first 3 entries of the stories available\n        const sampleStories = data.slice(0,3);\n\n        return(\n            \n                <div className=\"stories\">\n                    {console.log('sampleStories'+sampleStories)}\n\n                    {sampleStories.map(post => (\n                \n                    <Link key={post.id} to = {`/blogs/`+post.id}>\n                        <div className = \"story\">\n                            <h2 className=\"exampleStory\">{post.title}</h2>\n                            \n                            <div className=\"readStory\">\n                                <h3 className=\"padding\" >Read the full story</h3>\n                                <svg height=\"32\" fill=\"white\"className=\"chevron-right\" viewBox=\"0 0 32 32\" width=\"32\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 1 L26 16 L12 31 L8 27 L18 16 L8 5 z\"/></svg>\n                            </div>\n\n                        </div>\n                    </Link>\n\n\n                    ))\n                    }\n\n                </div>\n    \n        )\n    } else {\n        return null\n    }\n\n\n}\n\nconst HomeComp = () => {\n    let isMobile = useMediaQuery({ maxWidth: 767 })\n    return (\n      // Passing down props for different classes based on platform, \n      // space  will be left at bottom of screen for typing on mobile\n\n      <div >\n        {/* <Container mobileClass={`${isMobile ? \"mobile\" : \"\"}`}></Container> */}\n        <div >\n                <div className={isMobile ?\"main-container-mobile\":\"main-container\"} >\n                    \n\n                    <div className={isMobile ? \"homeText-mobile\":\"homeText\"}>\n                        <h1 className={isMobile ?\"local-mobile\":\"local\"}>Your local Community built on a Green Foundation</h1> \n                        <h2 className=\"localSmall\">We are here to help you and your community.</h2>\n                        <div className=\"buttons\">\n                            <Link to='/donation'><button id=\"bigger\"className=\"donateButton2\"> Make a donation</button></Link>\n                            <Link to='/about'><button id=\"bigger\"className={isMobile ?\"LearnButton-mobile\":\"LearnButton\"}> Learn More</button></Link>\n                        </div>  \n                        \n\n                    </div>\n\n                    <div className = \"homepageDescription\"></div>\n                    <div className= \"wave-container\">\n                        <svg  className=\"wave\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 130 1420 95\">\n                        <path fill=\"white\" fillOpacity=\"1\" d=\"M0,160L120,165.3C240,171,480,181,720,176C960,171,1200,149,1320,138.7L1440,128L1440,320L1320,320C1200,320,960,320,720,320C480,320,240,320,120,320L0,320Z\"></path>\n                        </svg>\n                    </div>\n                </div>\n            \n\n            <div className=\"whiteBackground\">\n            <div className={isMobile ?\"descriptionContainer-mobile\":\"descriptionContainer\"}>\n                <h2 className={isMobile ?\"black-mobile\":\"black\"}>We are here for the people who make a difference in the community</h2> \n                    <div className= \"boxes\">\n                        <div><h1 className={isMobile ?\"numbers-mobile\":\"numbers\"}>10,000</h1><h3 className=\"itemName\">Item name</h3></div>\n                        <div><h1 className={isMobile ?\"numbers-mobile\":\"numbers\"}>10,000</h1><h3 className=\"itemName\">Item name</h3></div>\n                        <div><h1 className={isMobile ?\"numbers-mobile\":\"numbers\"}>10,000</h1><h3 className=\"itemName\">Item name</h3></div>\n                    </div>\n                \n                {/* <p className={`blurb${this.props.route.something ? \"-mobile\" : \"\"}`}> */}\n                   <p className={isMobile ?\"blurb-mobile\":\"blurb\"}>\n                    Bacon ipsum dolor amet picanha ham hock tri-tip pork, t-bone drumstick chislic pork belly chuck hamburger ground round. Filet mignon alcatra biltong hamburger pig flank andouille turkey doner venison beef ribs. Landjaeger short ribs kevin shoulder turkey frankfurter tail spare ribs tri-tip alcatra burgdoggen pastrami. Flank drumstick t-bone swine. Leberkas pancetta sausage venison meatloaf capicola flank. Beef ribs t-bone chuck pork belly pastrami alcatra. Kevin boudin shoulder, ribeye fatback cupim frankfurter sirloin cow pork chop.\n                    Alcatra pig chuck, pork loin ball tip leberkas rump chicken. Flank pig frankfurter pork sausage shank. T-bone burgdoggen shank brisket kevin. \n                    <br></br>\n                    <br></br>\n                    Cow pork belly pork chop porchetta, tenderloin buffalo turducken turkey meatball t-bone. T-bone pork belly corned beef buffalo. Picanha kevin pork chop bacon, brisket burgdoggen ham hamburger frankfurter shankle ground round ribeye biltong alcatra.            Chislic doner t-bone leberkas, buffalo rump kielbasa turducken bresaola porchetta sausage swine pork loin. Landjaeger short loin strip steak prosciutto short ribs cupim ground round boudin t-bone pork chop tri-tip kielbasa venison beef. Shoulder chislic chicken, pig salami shank rump. Pork loin spare ribs fatback, kevin biltong meatloaf salami shank turkey jowl andouille flank brisket chuck. Tongue short ribs alcatra ball tip. Burgdoggen buffalo kevin strip steak cow, swine filet mignon tail porchetta spare ribs. Alcatra bresaola ham pancetta turducken, burgdoggen turkey.\n                    Short loin chislic buffalo, je our generator a try… it’s tasty!\n                </p>\n                </div>\n\n                <div className=\"storyContainer\">\n                        <Story></Story>\n                    <Link to='/blogs'><button className={isMobile ?\"viewMore-mobile\":\"viewMore\"}>View more success stories</button></Link>\n                </div>\n                <div className=\"blankSpace\"></div>\n                <hr className=\"solid\"></hr>\n\n                <BottomBanner></BottomBanner>\n\n              \n            </div>\n        </div>\n\n      </div>\n    )\n}\n\n\n\nexport default Home\n","import React, { Component } from 'react'\nimport {BrowserRouter as Switch,Route ,Link} from \"react-router-dom\";\n// import Blogs from '../Blogs';\nimport Strapi from \"strapi-sdk-javascript/build/main\";\nimport marked from 'marked';\n\n\nconst baseURL='http://localhost:1337/blogs/';\n\nclass SingleBlog extends React.Component{\n    constructor(props) {\n        super(props);\n    \n        this.state = {\n          blog: 'blurb',\n          test:'',\n          authors:''\n\n        }\n      }\n    \n    componentDidMount() {\n    this.getBlog()\n    .then(response => response.json())\n    .then(data => this.setState({ blog: data, test: data.content, authors: data.authors}));\n    }\n\n    getBlog() {\n    return fetch(`${baseURL}${this.props.match.params.id}`)\n    }\n\n\n\n    render(){\n        return(\n            <div className=\"blogBanner\">\n                <div className=\"blogcontainer\">\n                    <h1 className=\"Posts\">{this.state.blog.title}</h1>\n                    <h4>Written by {this.state.blog.authors? this.state.blog.authors[0].Name:'Green'}</h4>\n                    {/* {console.log(this.state.authors[0])} */}\n                    \n\n                    {/* {this.state.authors.map(post => (\n            \n                \n                        <div>                 \n                            <div className=\"title\">\n                                {post.Name} \n                            </div>\n                        </div >\n                \n                    ))} */}\n\n\n                    <div className=\"individualArticle\" dangerouslySetInnerHTML={{ __html: marked(this.state.test)}}></div>\n                    {/* {marked(this.state.test)} */}\n\n                    <p>{this.state.blog.published}</p>\n                    <Link to={'/blogs'}><button className=\"donateButton2\">Go back to all blogs</button></Link>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default SingleBlog\n","import React , { Component }  from \"react\";\nimport {DropdownButton, Dropdown} from 'react-bootstrap'\nimport {   Route, Link, Switch, NavLink} from \"react-router-dom\";\nimport { withRouter } from 'react-router-dom';\n\n// import './App.css';\nimport About from \"../../Pages/About\";\nimport Blogs from \"../../Pages/Blogs\";\nimport Support from \"../../Pages/Contact\";\nimport Home from \"../../Pages/Home\";\nimport Donation from \"../../Pages/Donation\";\nimport LightLogo from \"../../../Media/Logos/SVG/logo-the-light.svg\"\nimport SmallLogo from \"../../../Media/Logos/PNG/LighterLogo.png\"\nimport Article from \"../../Pages/Article\";\nimport SingleBlog from \"../../Pages/SingleBlog\";\n\nclass Container extends Component {\n    render() {\n      return(\n    <div>\n      <div className ={this.props.mobileClass===\"mobile\" ? \"container-mobile\" : \"container\"}>\n            {this.props.mobileClass===\"mobile\" ? <MobileNavBar></MobileNavBar>: <NavBar></NavBar>}\n        <nav className=\"app-container\">\n        </nav>\n          <Switch>\n\n            <Route path='/' exact component={Home}/>\n            <Route path='/about' component ={About}/>\n            <Route path='/support' component ={Support}/>\n            <Route path='/donation' component ={Donation}/>\n            <Route path='/blogs' component ={BlogMain}/>\n            <Route path='/articles' exact component ={Article}/>\n            <Route render={()=><h1> 404: Page not found</h1>}/>\n          </Switch>\n        \n      \n    </div>\n\n    </div>)\n    }\n}\n\nconst BlogMain = () => (\n  <Switch>\n    <Route exact path='/blogs' component={Blogs}/>\n    <Route path='/blogs/:id' component={SingleBlog}/>\n  </Switch>\n)\n\n\nconst NavBar = () => {\n  return (\n    <nav className=\"app-container\">\n      <div className=\"navbar\">\n\n        <div className=\"navbarleft\">\n          <Link to='/'> \n            <img className=\"logo\" height=\"50px\" src={LightLogo} alt=\"Logo\">\n            </img>\n          </Link>    \n        </div>\n\n        <div className= \"navbarright\">\n          <h3 id=\"space\"><Link to='/'>Home</Link> </h3>\n          <h3 id=\"space\"><Link to='/about'>About us</Link></h3>\n          <h3 id=\"space\"><NavLink to='/support'> Support Us</NavLink></h3>\n          <button className=\"donateButton\"><Link to='/donation'> Make a donation</Link></button>\n        </div>\n      </div>\n    </nav>\n  );\n}\nconst MobileNavBar = () => {\n  return (\n\n    <div className=\"navbar-mobile\">\n\n      <div className=\"navbarleft\">\n        <Link to='/'> \n          <img className=\"logo\" height=\"70px\" src={SmallLogo} alt=\"Logo\">\n          </img>\n        </Link>    \n      </div>\n      \n      <div className= \"navbarright-mobile\">\n      <DropdownButton  title={\n          <div>\n            <div className=\"Bar\"></div>\n            <div className=\"Bar\"></div>\n            <div className=\"Bar\"></div>\n          </div>\n        } \n        id=\"icon\">\n          <div className=\"menu-mobile\">\n              <Dropdown.Item>\n                <h3 id=\"space-mobile\"><Link to='/'>Home</Link></h3>\n              </Dropdown.Item>\n\n              <Dropdown.Item>\n                <h3 id=\"space-mobile\"><Link to='/about'>About us</Link></h3>\n              </Dropdown.Item>\n\n              <Dropdown.Item>\n                <h3 id=\"space-mobile\"><Link to='/support'> Support Us</Link></h3>\n              </Dropdown.Item>\n\n              <Dropdown.Item>\n                <button className=\"donateButton-mobile\"> <Link to='/donation'> Make a donation</Link></button>\n              </Dropdown.Item>\n\n            </div>\n\n        </DropdownButton>\n      </div>\n\n    </div>\n\n\n  );\n}\n\n\nexport default Container;","import React from 'react';\nimport './App.css';\nimport Container from './components/StructuralComponents/Container'; \nimport { useMediaQuery } from 'react-responsive';\nimport { BrowserRouter } from 'react-router-dom';\n\nfunction App() {\n  \n  //Checking platform the page is loaded on; phone/smaller screen or a Desktop\n  const DesktopOrMobile = () => {\n    let isMobile = useMediaQuery({ maxWidth: 767 })\n    return (\n      // Passing down props for different classes based on platform, \n      // space  will be left at bottom of screen for typing on mobile\n\n      <div className ={`container${isMobile ? \"-mobile\" : \"\"}`}>\n        <Container mobileClass={`${isMobile ? \"mobile\" : \"\"}`}></Container>\n      </div>\n    )\n  }\n\n\n  return (\n    // Rendering the component above \n    <div className=\"App\">\n      <BrowserRouter>\n        <DesktopOrMobile>\n        </DesktopOrMobile>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n// import marked from 'marked'\n\nReactDOM.render(\n  <React.StrictMode>\n    {/* <App className={style}/> */}\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}