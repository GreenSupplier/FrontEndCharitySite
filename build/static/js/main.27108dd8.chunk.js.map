{"version":3,"sources":["components/About/index.js","components/Article/index.js","components/BlogList/blogs.js","components/Blog/index.js","components/Contact/index.js","components/Home/index.js","components/Donation/index.js","App.js","serviceWorker.js","index.js"],"names":["About","Component","Article","strapi","Strapi","Blogs","props","state","posts","post","getEntries","this","setState","alert","map","key","title","className","to","id","dangerouslySetInnerHTML","__html","marked","content","substring","path","exact","component","render","React","Blog","Contact","Home","Donation","App","Support","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"0RAYeA,EAVf,uKAEQ,OACI,6BACI,kDAJhB,GAA2BC,a,2DCUZC,EAVf,uKAEQ,OACI,6BACI,oDAJhB,GAA6BD,aCKvBE,EAAS,IAAIC,IAAO,yBAyDXC,E,kDAtDb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACZC,MAAO,GACPC,KAAK,IAJW,E,yMAUEN,EAAOO,WAAW,S,OAAhCF,E,OACNG,KAAKC,SAAS,CAAEJ,U,gDAGjBK,MAAM,EAAD,I,8IAML,OAGE,iCAGE,kBAAC,IAAD,KACGF,KAAKJ,MAAMC,MAAMM,KAAI,SAAAL,GAAI,OAE1B,yBAAKM,IAAKN,EAAKO,MAAOC,UAAU,QAC9B,yBAAKA,UAAU,SACb,kBAAC,IAAD,CAAMC,GAAM,SAAUT,EAAKU,IACvBV,EAAKO,QAGX,yBAAKI,wBAAyB,CAAEC,OAAQC,IAAOb,EAAKc,QAAQC,UAAU,EAAE,aAOxE,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOC,KAAM,YAAaC,OAAK,EAACC,UAAYzB,IAC5C,kBAAC,IAAD,CAAO0B,OAAQ,kBAAI,8D,GA7CbC,IAAM5B,WCyBX6B,EAvBf,uKAEQ,OACI,6BACE,gDACE,kBAAC,EAAD,WALhB,GAA0B7B,aCCX8B,EAVf,uKAEQ,OACI,6BACI,oDAJhB,GAA6B9B,aCUd+B,EAVf,uKAEQ,OACI,6BACI,iDAJhB,GAA0B/B,aCUXgC,EAVf,uKAEQ,OACI,6BACI,qDAJhB,GAA8BhC,aCwCfiC,MAhCf,WACE,OACE,kBAAC,IAAD,KACE,6BACE,wBAAIjB,UAAU,UACZ,4BAAI,kBAAC,IAAD,CAAMC,GAAG,KAAT,SAEJ,yBAAKD,UAAW,aACd,4BAAI,kBAAC,IAAD,CAAMC,GAAG,UAAT,aACJ,4BAAI,kBAAC,IAAD,CAAMA,GAAG,YAAT,eAEJ,4BAAI,kBAAC,IAAD,CAAMA,GAAG,aAAT,sBAKN,4BAAI,kBAAC,IAAD,CAAMA,GAAG,SAAT,UAER,kBAAC,IAAD,KAEI,kBAAC,IAAD,CAAOO,KAAK,IAAIC,OAAK,EAACC,UAAYK,IAClC,kBAAC,IAAD,CAAOP,KAAK,SAASE,UAAY3B,IACjC,kBAAC,IAAD,CAAOyB,KAAK,WAAWE,UAAYQ,IACnC,kBAAC,IAAD,CAAOV,KAAK,YAAYE,UAAYM,IACpC,kBAAC,IAAD,CAAOR,KAAK,QAAQE,UAAYG,IAChC,kBAAC,IAAD,CAAOF,OAAQ,kBAAI,0DCvBTQ,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCXNC,IAASb,OACP,kBAAC,IAAMc,WAAP,KAEE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDuHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.27108dd8.chunk.js","sourcesContent":["import React, { Component } from 'react'\n\nexport class About extends Component {\n    render() {\n        return (\n            <div>\n                <h1>About Content</h1>\n            </div>\n        )\n    }\n}\n\nexport default About\n","import React, { Component } from 'react'\n\nexport class Article extends Component {\n    render() {\n        return (\n            <div>\n                <h1>Article Content</h1>\n            </div>\n        )\n    }\n}\n\nexport default Article\n","import React from \"react\";\nimport Strapi from \"strapi-sdk-javascript/build/main\";\nimport marked from 'marked'\nimport {BrowserRouter as Router, Route, Link, Switch} from \"react-router-dom\";\nimport Article from '../Article'\n\n\nconst strapi = new Strapi('http://localhost:1337');\n\nclass Blogs extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n     posts: [],\n     post:'',\n   }\n }\n\nasync componentDidMount() {\n try {\n   const posts = await strapi.getEntries('blogs')\n   this.setState({ posts });\n } \n catch(err) {\n  alert(err);\n }\n}\n\nrender() {\n  // var preview='';\n  return (\n\n\n    <section>\n\n\n      <Router>\n        {this.state.posts.map(post => (\n          \n        <div key={post.title} className=\"list\">\n          <div className=\"title\">\n            <Link to = {'/blog/'+ post.id}>\n              {(post.title)} \n            </Link>\n          </div>\n          <div dangerouslySetInnerHTML={{ __html: marked(post.content.substring(0,130)) }}></div>\n        </div >\n        \n        ))}\n              \n            \n          \n          <Switch>\n              <Route path={'/blog/:id'} exact component ={Article}/>\n              <Route render={()=><h1> 404: Page not found</h1>}/>\n          </Switch>\n\n          \n        </Router>\n\n    </section>\n  )\n }\n}\nexport default Blogs;","import React, { Component } from 'react';\nimport Blogs from '../BlogList/blogs.js'\n\n// import {Switch, Route, Link} from \"react-router-dom\";\n\n// import Articles from \"../containers/Articles\";\n// import Article from \"../containers/Article\";\n// import Author from \"../containers/Author\";\n// import Authors from \"../containers/Authors\";\n\n\nexport class Blog extends Component {\n    render() {\n        return ( \n            <div>\n              <h1> All Blog Posts </h1>  \n                <Blogs></Blogs>\n                {/* <h3><Link to='/articles'>Articles</Link></h3>\n                <h3><Link to='/authors'>Authors</Link></h3>\n                <h3><Link to='/article/:id'>Article</Link></h3>\n                <h3><Link to='/author/:id'>Author</Link></h3>\n\n              <Switch>\n                <Route path=\"/articles\" exact component={Articles}  />\n                <Route path=\"/authors\" component={Authors} exact />\n                <Route path=\"/article/:id\" component={Article} exact />\n                <Route path=\"/author/:id\" component={Author} exact/>\n              </Switch> */}\n            </div>\n\n        )\n    }\n}\n\nexport default Blog","import React, { Component } from 'react'\n\nexport class Contact extends Component {\n    render() {\n        return (\n            <div>\n                <h1>Contact Content</h1>\n            </div>\n        )\n    }\n}\n\nexport default Contact\n","import React, { Component } from 'react'\n\nexport class Home extends Component {\n    render() {\n        return (\n            <div>\n                <h1>Home content</h1> \n            </div>\n        )\n    }\n}\n\nexport default Home\n","import React, { Component } from 'react'\n\nexport class Donation extends Component {\n    render() {\n        return (\n            <div>\n                <h1>Donation Content</h1>\n            </div>\n        )\n    }\n}\n\nexport default Donation\n","import React from \"react\";\nimport {BrowserRouter as Router, Route, Link, Switch} from \"react-router-dom\";\n\nimport './App.css';\nimport About from \"./components/About\";\nimport Blog from \"./components/Blog\";\nimport Support from \"./components/Contact\";\nimport Home from \"./components/Home\";\nimport Donation from \"./components/Donation\";\n\nfunction App(){\n  return (\n    <Router>\n      <nav>\n        <ul className=\"navbar\">\n          <h3><Link to='/'>Home</Link></h3>\n          \n          <div className= \"floatleft\">\n            <h3><Link to='/about'>About us</Link></h3>\n            <h3><Link to='/support'>Support Us</Link></h3>\n\n            <h3><Link to='/donation'>Make a Donation</Link></h3>\n          </div>\n          \n          \n        </ul>\n          <h3><Link to='/blog'>Blog</Link></h3>\n      </nav>\n      <Switch>\n        \n          <Route path='/' exact component ={Home}/>\n          <Route path='/about' component ={About}/>\n          <Route path='/support' component ={Support}/>\n          <Route path='/donation' component ={Donation}/>\n          <Route path='/blog' component ={Blog}/>\n          <Route render={()=><h1> 404: Page not found</h1>}/>\n      </Switch>\n    </Router>\n\n  )\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n// import marked from 'marked'\n\nReactDOM.render(\n  <React.StrictMode>\n    {/* <App className={style}/> */}\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}